---
- name: Ensure library python-docker-py is installed
  package:
    name: "{{ docker_package }}"
    state: present
  when: ansible_distribution == "CentOS"

- name: "Find extra repos"
  shell: "set -o pipefail; yum repolist all | egrep -e '^rhui-REGION-rhel-server-extras' -e '^rhel-7-server-extras-rpms' | cut -d'/' -f1"
  args:
    warn: no
  register: "redhat_extrarepo"
  changed_when: False
  when: ansible_distribution == "RedHat"

- name: Ensure library python-docker-py is installed
  yum:
    name: "{{ docker_package }}"
    state: present
    enablerepo: "{{ redhat_extrarepo.stdout }}"
  when: ansible_distribution == "RedHat"

- name: Ensure pip is installed
  package:
    name: "python2-pip"
    state: present
  when: ansible_distribution == "Amazon"

- name: Ensure docker-py is installed
  pip:
    name: docker-py
  when: ansible_distribution == "Amazon"

- name: Create dedicated networks with options
  docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver }}"
    ipam_options:
      subnet: "{{ item.ipam_options.subnet }}"
      gateway: "{{ item.ipam_options.gateway }}"
  loop: "{{ networks }}"
  when: item.name | length > 0

- name: Start containers
  docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    env: "{{ item.env }}"
    state: started
    restart_policy: unless-stopped
    ports: "{{ item.ports }}"
    mac_address: "{{ item.mac_address }}"
    networks:
      - name: "{{ item.networks.name }}"
        ipv4_address: "{{ item.networks.ipv4_address }}"
    volumes: "{{ item.volumes }}"
    labels:
      application: "{{ item.labels.application }}"
      environment: "{{ item.labels.environment }}"
    log_driver: "{{ item.log_driver }}"
    log_options:
      labels: "application,environment"
    shm_size: "{{ item.shm_size }}"
    ulimits: "{{ item.ulimits }}"
    privileged: "{{ item.privileged | default(false) }}"
  loop: "{{ containers }}"
  when: item.name | length > 0
