---
- name: Ensure library python-docker-py is installed
  package:
    name: "{{ docker_package }}"
    state: present
  when: ansible_distribution == "CentOS"

- name: 'Find extra repos'
  shell:
    cmd: |
      set -o pipefail;
      yum repolist all | egrep -e '^[!*]?rhui-REGION-rhel-server-extras' -e '^[!*]?rhel-7-server-extras-rpms' -e '^[!*]?(rhui-)?rhel-7-server-rhui-extras-rpms' | sed -r 's#^[!*]?([^/]*)/.*#\1#'
  args:
    warn: 'no'
  register: 'redhat_extrarepo'
  changed_when: False
  when: ansible_distribution == "RedHat"

- name: Ensure library python-docker-py is installed
  yum:
    name: "{{ docker_package }}"
    state: present
    enablerepo: "{{ redhat_extrarepo.stdout }}"
  when: ansible_distribution == "RedHat"

- name: Ensure pip is installed
  package:
    name: "python2-pip"
    state: present
  when: ansible_distribution == "Amazon"

- name: Ensure docker-py is installed
  pip:
    name: docker-py
  when: ansible_distribution == "Amazon"

- name: Create dedicated networks with options
  docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver }}"
    ipam_options:
      subnet: "{{ item.ipam_options.subnet }}"
      gateway: "{{ item.ipam_options.gateway }}"
  loop: "{{ networks }}"
  when: item.name | length > 0

- name: Start containers
  docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    env: "{{ item.env | default(omit) }}"
    state: 'started'
    restart_policy: 'unless-stopped'
    ports: "{{ item.ports | default(omit) }}"
    mac_address: "{{ item.mac_address }}"
    networks: "{{ item.networks | default(omit) }}"
    volumes: "{{ item.volumes | default(omit) }}"
    labels:
      application: "{{ item.labels.application }}"
      environment: "{{ item.labels.environment }}"
    log_driver: "{{ item.log_driver | default('json-file') }}"
    log_options:
      labels: 'application,environment'
    shm_size: "{{ item.shm_size }}"
    ulimits: "{{ item.ulimits | default(omit) }}"
    privileged: "{{ item.privileged | default(omit) }}"
    links: "{{ item.links | default(omit) }}"
    entrypoint: "{{ item.entrypoint | default(omit) }}"
    pull: "{{ item.pull | default(omit) }}"
    command: "{{ item.command | default(omit) }}"
    capabilities: "{{ item.capabilities | default(omit) }}"
    cap_drop: "{{ item.capabilities_drop | default(omit) }}"
  loop: "{{ containers }}"
  when: item.name | length > 0
